%table
  %thead
    %tr
      %th.handle{:colspan => 2}
        = human_model_name(model)
        - if model != query_generator_session.query.constantized_main_model
          = link_to_remote(image_tag("query_generator/red-x.png"), :url => remove_model_query_generator_generated_queries_path(:model => model.to_s, :wizard_step => params[:wizard_step]),
                                                                   :confirm => t("query_generator.wizard.associations.remove_model_warning"),
                                                                   :html => {:title => t("query_generator.wizard.associations.remove_model_title")})

  %tbody
    -# To use the ActiveRecord joins, we can only allow joins which start with the main model
    - if model.to_s == query_generator_session.generated_query.main_model.to_s || query_generator_session.query.association_targets.include?(model.to_s)
      - dh.graph.associations_for(model).each do |association, target|
        - next unless ccan? :read, target
        -# ignore association if the target is our main model
        - next if target.to_s == query_generator_session.generated_query.main_model
        -# ignore association if the association target is already hit by another association
        - next if query_generator_session.query.association_targets.include?(target.to_s)
        -# ignore association if there is already an association between the two models (different direction)
        - next if query_generator_session.query.associations_for(target).values.include?(model.to_s)
        = render :partial => wizard_file(2, "association_row"), :locals => {:model => model, :association => association, :end_point => target}